#Ansible Playbook for Subutai Ghost BluePrint
---

- hosts: all
  gather_facts: false
  remote_user: root
  tasks: 

    - name: Update
      raw: apt-get -y --allow-unauthenticated update || true

    - name: Ensure python is available
      raw: test -e /usr/bin/python || apt install -y --allow-unauthenticated python-minimal

    - name: Ensure python-apt is available
      raw: test -d /usr/share/python-apt || apt install -y --allow-unauthenticated python-apt

    - name: Upgrade
      raw: apt-get -y --allow-unauthenticated upgrade

- hosts: Ghost
  remote_user: root
  tasks:
 
    - name: Install required debs
      apt: 
        name: "{{ item }}"
        state: present
        allow_unauthenticated: yes
      with_items: 
        - php7.0
        - php7.0-cgi
        - php7.0-mysql
        - php7.0-zip
        - php7.0-dom
        - php7.0-xmlwriter
        - php7.0-xmlreader
        - php7.0-xml
        - php7.0-mbstring
        - php7.0-gd
        - php7.0-curl
        - apache2
        - libapache2-mod-php7.0
        - unzip 
        - mariadb-server
        - python-mysqldb

    # - name: Downloading ghost zip file
    #  get_url:
    #     url: https://ghost.org/zip/ghost-latest.zip 
    #     dest: /tmp/ghost-latest.zip
    #     validate_certs: false

    - name: Create database
      mysql_db: 
        name: ghost
        state: present
        encoding: utf8

    - name: Create database user
      mysql_user: 
        name: ghost
        password: ghost
        priv: ghost.*:ALL

    - name: Download and unzip Ghost
      unarchive: 
        src: "https://ghost.org/zip/ghost-latest.zip"
        dest: "/tmp"
        remote_src: yes
        validate_certs: no
        # extra_opts: [--strip-components=1]


    - name: Move files
      command: mv /tmp/* /var/www/html/

    - name: Change file ownership
      file: 
        path: /var/www/html
        recurse: yes
        owner: www-data
        group: www-data

    - name: Restart apache
      service: 
        name: apache2
        state: restarted   

  # -name: Directory creation
       
  # -name: Moving file
  # -name: Installing npm
  # -name: NodeJs Download
  #   shell:
  # -name: NodeJs Installation
  # -name: npm Installation
  # -name: Screen nginx Installation
  # -name: File editing (nano)
  # -name: Restart of nginx
  # -name: npm start --production


 
  
  # - name: Creating database
  #   mysql_db:
  #     name: drupal
  #     state: present
  #     encoding: utf8
  # - name: Creating database user
  #   mysql_user:
  #     name: drupal
  #     password: drupal
  #     priv: drupal.*:ALL 
  # - name: Restarting nginx
  #   service:
  #     name: nginx
  #     state: restarted
  # - name: Downloading Composer
  #   get_url:
  #     url: https://getcomposer.org/installer
  #     dest: /tmp/installer
  #     validate_certs: false
  # - name: Installing Composer
  #   shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin --disable-tls
  #   args:
  #     creates: /usr/local/bin/composer
  # - name: Rename composer.phar to composer
  #   shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
  #   args:
  #     creates: /usr/local/bin/composer
  # - name: Making composer executable
  #   file: 
  #     path: /usr/local/bin/composer
  #     mode: a+x
  #     state: file
  # - name: Installing Drush
  #   shell: composer global require drush/drush:dev-master


